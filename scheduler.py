import logging
import aiohttp
from aiogram import Bot
from aiogram.exceptions import TelegramForbiddenError, TelegramBadRequest
from database import get_all_users, remove_user

logger = logging.getLogger(__name__)

async def get_cat_image_url(api_key: str) -> str | None:
    """–ü–æ–ª—É—á–∞–µ—Ç URL —Å–ª—É—á–∞–π–Ω–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–∏ —Å –∫–æ—Ç–æ–º."""
    url = "https://api.thecatapi.com/v1/images/search"
    headers = {"x-api-key": api_key}
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(url, headers=headers) as response:
                if response.status == 200:
                    data = await response.json()
                    return data[0]['url']
                else:
                    logger.error(f"–û—à–∏–±–∫–∞ API TheCatApi: –°—Ç–∞—Ç—É—Å {response.status}")
                    return None
    except Exception as e:
        logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É —Å –∫–æ—Ç–æ–º: {e}")
        return None

async def send_daily_cats(bot: Bot, db_path: str, cat_api_key: str):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏ –∫–æ—Ç–æ–≤."""
    logger.info("–ù–∞—á–∞–ª–æ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏...")
    users = await get_all_users(db_path)
    image_url = await get_cat_image_url(cat_api_key)

    if not image_url:
        logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏. –†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
        return

    sent_count = 0
    for user_id in users:
        try:
            await bot.send_photo(
                chat_id=user_id,
                photo=image_url,
                caption="–í–∞—à –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –∫–æ—Ç–∏–∫! üêæ"
            )
            sent_count += 1
        except (TelegramForbiddenError, TelegramBadRequest) as e:
            logger.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞ –∏–ª–∏ —á–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–¥–∞–ª—è–µ–º –∏–∑ –±–∞–∑—ã.")
            await remove_user(db_path, user_id)
        except Exception as e:
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
            
    logger.info(f"–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {sent_count} –∏–∑ {len(users)} —Å–æ–æ–±—â–µ–Ω–∏–π.")
